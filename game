#!/usr/bin/env ruby
require_relative 'lib/options'
# require_relative 'lib/environment'
require_relative 'models/game'

command = ARGV[0]


# name = ARGV[1]
options = Options.parse
Environment.environment = options[:environment] || "production"
case command.downcase
when "add"
  name = ARGV[1]
  g = Game.new(options.merge(name: name))
  if g.save
    puts "Added #{g.name}. #{g.min_players}-#{g.max_players} players, #{g.playing_time} minutes\n#{g.description}"
  else
    puts g.errors
  end
when "remove"
  name = ARGV[1]
  g = Game.remove(name)
  if g.errors.nil? or g.errors.empty?
    puts "#{name} has been removed from your collection"
  else
    puts g.errors
  end
when "update"
  name = ARGV[1]
  g = Game.update(name, options)
  if g.errors.nil? or g.errors.empty?
    puts "Updated #{g.name}. #{g.min_players}-#{g.max_players} players, #{g.playing_time} minutes\n#{g.description}"
  else
    puts g.errors
  end
else
  puts "unknown"
end