#!/usr/bin/env ruby
require_relative 'lib/options'
# require_relative 'lib/environment'
require_relative 'models/game'
require_relative 'models/friend'
require_relative 'models/play'
require_relative 'lib/plays_friends'

command = ARGV[0]


# name = ARGV[1]
options = Options.parse
Environment.environment = options[:environment] || "production"
case command.downcase
when "add"
  name = ARGV[1]
  g = Game.new(options.merge(name: name))
  if g.save
    puts "Added #{g.name}. #{g.min_players}-#{g.max_players} players, #{g.playing_time} minutes\n#{g.description}"
  else
    puts g.errors
  end
when "remove"
  name = ARGV[1]
  g = Game.remove(name)
  if g.errors.nil? or g.errors.empty?
    puts "#{name} has been removed from your collection"
  else
    puts g.errors
  end
when "update"
  name = ARGV[1]
  g = Game.update(name, options)
  if g.errors.nil? or g.errors.empty?
    puts "Updated #{g.name}. #{g.min_players}-#{g.max_players} players, #{g.playing_time} minutes\n#{g.description}"
  else
    puts g.errors
  end
when "list"
  number_of_players = ARGV[1].split(' ')[0].to_i
  player_word = number_of_players > 1 ? "players" : "player"
  games = Game.find_by_players(number_of_players)
  if games.empty?
    puts "You do not have any games for #{number_of_players} #{player_word}"
  else
    puts "Games for #{number_of_players} #{player_word}:"
    games.each do |game|
      puts game.name
    end
  end
when "play"
  game_instance = Game.new
  game = game_instance.find_by_name(ARGV[1])
  if ARGV.length < 3
    puts "You must provide the name of a game and at least one friend"
  else
    players = ARGV[2].split(',').map{|name| name.strip}
    player_names = players[0]
    player_names = players[0..-2].join(', ') + " and " + players[-1] if players.length > 1
    players = players.map{|player| Friend.new({name: player}).save}
    players = players.map{|player| player.id}
    game = Game.new
    game = game.find_by_name(ARGV[1])
    unless game.nil?
      game = Game.new(game)
      play = Play.new({game_id: game.id})
      if play.save
        players = players.map{|player| PlaysFriends.new(play.id, player)}
        players.map{|player| player.save}
        puts "You played #{game.name} with #{player_names}"


      else
        puts play.errors
      end
    else
      puts "Game not recognized"
    end
  end
else
  puts "unknown"
end